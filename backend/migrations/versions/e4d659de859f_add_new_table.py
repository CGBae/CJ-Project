"""add new table

Revision ID: e4d659de859f
Revises: 
Create Date: 2025-10-15 13:48:24.524215

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4d659de859f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sessions', sa.Column('patient_id', sa.BigInteger(), nullable=False))
    op.add_column('sessions', sa.Column('target_metric', sa.JSON(), nullable=True))
    op.drop_index(op.f('idx_sessions_status'), table_name='sessions')
    op.drop_constraint(op.f('sessions_created_by_fkey'), 'sessions', type_='foreignkey')
    op.drop_column('sessions', 'track_url')
    op.drop_column('sessions', 'status')
    op.drop_column('sessions', 'created_at')
    op.drop_column('sessions', 'created_by')
    op.drop_column('sessions', 'provider')
    op.drop_column('sessions', 'error')
    op.drop_column('sessions', 'prompt')
    op.drop_column('sessions', 'updated_at')
    op.alter_column('users', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False,
               existing_server_default=sa.text("'therapist'::text"))
    op.drop_column('users', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.alter_column('users', 'role',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text("'therapist'::text"))
    op.alter_column('users', 'email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.add_column('sessions', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('prompt', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('provider', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('created_by', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('status', sa.TEXT(), server_default=sa.text("'QUEUED'::text"), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('track_url', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('sessions_created_by_fkey'), 'sessions', 'users', ['created_by'], ['id'])
    op.create_index(op.f('idx_sessions_status'), 'sessions', ['status'], unique=False)
    op.drop_column('sessions', 'target_metric')
    op.drop_column('sessions', 'patient_id')
    # ### end Alembic commands ###
